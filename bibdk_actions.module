<?php

module_load_include('inc', 'bibdk_actions', 'bibdk_actions.print');
module_load_include('inc', 'bibdk_actions', 'bibdk_actions.email');

/**
 *
 */
function bibdk_actions_menu(){
  $items['print/cart/%'] = array(
    'title' => '',
    'page callback' => 'bibdk_actions_print_page',
    'page arguments' => array(2),
    'access arguments' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_cart_actions().
 *
 * @internal param array $actions
 * @param $actions
 * @return array
 */
function bibdk_actions_cart_actions($actions){
  $actions = bibdk_actions_get_print_actions($actions);
  $actions = bibdk_actions_get_email_actions($actions);
  return $actions;
}


function bibdk_actions_get_manifestations($pids) {
  /**
   * ting_openformat_get_manifestations returns a bibdkWork as an array and all
   * the manifestations are saved in the manifestations variable.
   * TODO :ting_openformat should have a method to return an array of manifestations
   */
  $works = ting_openformat_get_manifestations($pids);
  $work = reset($works);
  return (isset($work->manifestations)) ? $work->manifestations : NULL;
}

/**
 * Retreives the nescessary values from the form_state array and returns array of manifestations
 *
 * @param $form_state
 * @param string $view_mode
 * @return array
 */
function bibdk_actions_parse_form_state($form_state, $view_mode = 'full'){
  if(!isset($form_state['input']['cart_table'])){
    return FALSE;
  }
  $items = $form_state['input']['cart_table'];
  foreach($items as $item => $pid){
  }

  return $manifestations;
}

/**
 * Implements hook_entity_info_alter().
 */
function bibdk_actions_entity_info_alter(&$entity_info) {
  $entity_info['bibdkManifestation']['view modes']['print'] = array(
    'label' => t('Cart print', array(), array('context' => 'bibdk_actions admin')),
    'custom settings' => TRUE,
  );

  $entity_info['bibdkManifestation']['view modes']['email'] = array(
    'label' => t('Cart Email', array(), array('context' => 'bibdk_actions admin')),
    'custom settings' => TRUE,
  );
}
